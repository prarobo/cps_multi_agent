#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.3.2
# In conjunction with Tcl version 8.6
#    Nov 19, 2014 01:52:58 PM
# Author: Prasanna Kannappan

import sys
import cProfile

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import cpsGame_supportGTS

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root, currGuiState
    root = Tk()
    root.title('CPS_Game')
    root.geometry('1301x744+65+24')
    #cpsGame_support.set_Tk_var()
    currGuiState = cpsGame_supportGTS.guiState()
    w = CPS_Game (currGuiState, root)
    cpsGame_supportGTS.init(root, w)
    
    try:
        img = PhotoImage(file='../robot_icon.gif')
        root.tk.call('wm', 'iconphoto', root._w, img)
    except: # catch *all* exceptions
        print "Failed to display icon"
    
    root.mainloop()

w = None
def create_CPS_Game (root, currGuiState, param=None):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
        
    rt = root
    w = Toplevel (root)
    w.title('CPS_Game')
    w.geometry('1301x744+65+24')
    cpsGame_supportGTS.set_Tk_var()
    w_win = CPS_Game (currGuiState, w)
    cpsGame_supportGTS.init(w, w_win, param)
    return w_win

def destroy_CPS_Game ():
    global w, currGuiState
    currGuiState.destroyObjects()
    w.destroy()
    w = None


class CPS_Game:
    def __init__(self, currGuiState, master=None):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        
        # Creating GUI Master
        master.configure(highlightcolor="black")
        master.bind("<Configure>", currGuiState.windowResizeCallback)
        
        # Creating buttons
        self.btnPlayRobot = Button (master,
                                    activebackground="#d9d9d9",
                                    text='''Play Robot''',
                                    command=currGuiState.playRobotCallback,
                                    state=DISABLED)
        
        self.btnReset = Button (master,
                                activebackground="#d9d9d9",
                                text='''Reset''',
                                command=currGuiState.resetCallback)
        
        self.btnStart = Button (master,
                                activebackground="#d9d9d9",
                                text='''Start''',
                                command=currGuiState.startCallback)
        
        self.btnRobotPosInit = Button (master,
                                       activebackground="#d9d9d9",
                                       text='''Set Robot Position''',
                                       command=currGuiState.robotInitPosCallback)
        
        self.btnEnvPosInit = Button (master,
                                     activebackground="#d9d9d9",
                                     text='''Set Env Position''',
                                     command=currGuiState.envInitPosCallback)

        self.canvasBoard = Canvas (master,
                                   background="white",
                                   borderwidth="2",
                                   relief=RIDGE,
                                   selectbackground="#c4c4c4")
        self.canvasBoard.bind("<Button-1>", currGuiState.agentPlaceCallback)

        self.canvasLegend = Canvas (master,
                                    borderwidth="2",
                                    selectbackground="#c4c4c4")

        defaultRows = StringVar(root)
        defaultRows.set("2")        
        self.spinRows = Spinbox (master,
                                 from_=1.0,
                                 to=20.0,
                                 activebackground="#f9f9f9",
                                 background="white",
                                 highlightbackground="black",
                                 selectbackground="#c4c4c4",
                                 textvariable=defaultRows,
                                 command=currGuiState.spinRowColCallback)
        
        defaultCols = StringVar(root)
        defaultCols.set("2")
        self.spinCols = Spinbox (master,
                                 from_=1.0,
                                 to=20.0,
                                 activebackground="#f9f9f9",
                                 background="white",
                                 highlightbackground="black",
                                 selectbackground="#c4c4c4",
                                 textvariable=defaultCols,
                                 command=currGuiState.spinRowColCallback)

        self.lblArenaRows = Label (master,
                                   activebackground="#f9f9f9",
                                   text='''Rows''')

        self.lblArenaCols = Label (master,
                                   activebackground="#f9f9f9",
                                   text='''Cols''')

        defaultNumRobots = StringVar(root)
        defaultNumRobots.set("2")
        self.spinNumRobots = Spinbox (master,
                                      from_=1.0,
                                      to=10.0,
                                      activebackground="#f9f9f9",
                                      background="white",
                                      highlightbackground="black",
                                      selectbackground="#c4c4c4",
                                      textvariable=defaultNumRobots,
                                      command=currGuiState.spinNumRobotsCallback)

        self.lblNumRobots = Label (master,
                                   activebackground="#f9f9f9",
                                   text='''Robots''')

        self.scrollbar = Scrollbar(master)
        
        self.txtOutput = Text (master,
                               background=_bgcolor,
                               relief=RIDGE,
                               font="TkTextFont",
                               selectbackground="#c4c4c4",
                               yscrollcommand=self.scrollbar.set)                       
        self.scrollbar.config(command=self.txtOutput.yview)
                
        self.moveRadio = IntVar(root)
        self.moveRadio.set(0)
        self.radioRobotMove = Radiobutton(master,
                                          text="Robot starts",
                                          variable=self.moveRadio,
                                          value=1,
                                          command=currGuiState.moveCallback)
        self.radioRobotMove.deselect() 

        self.radioEnvMove = Radiobutton(master,
                                        text="Env starts",
                                        variable=self.moveRadio,
                                        value=0,
                                        command=currGuiState.moveCallback)
        self.radioEnvMove.select()
        
        self.btnSaveAutomaton = Button (master,
                                        activebackground="#d9d9d9",
                                        text='''Save Automaton''',
                                        command=currGuiState.saveAutomatonCallback,
                                        state=DISABLED)

        self.moveEnvPlay = IntVar(root)
        self.moveEnvPlay.set(0)
        self.radioEnvAutoPlay = Radiobutton(master,
                                            text="Env auto-play",
                                            variable=self.moveEnvPlay,
                                            value=1,
                                            command=currGuiState.envPlayCallback)
        self.radioEnvAutoPlay.deselect() 

        self.radioEnvManualPlay = Radiobutton(master,
                                              text="Env manual-play",
                                              variable=self.moveEnvPlay,
                                              value=0,
                                              command=currGuiState.envPlayCallback)
        self.radioEnvManualPlay.select()

        
        self.usePolicy = IntVar()
        self.chkUsePolicy = Checkbutton(master, text="Use policy",
                                             variable=self.usePolicy,
                                             command=currGuiState.usePolicyCallback)
        self.chkUsePolicy.select()
        
        # Position of GUI elements
        self.btnPlayRobot.place(relx=0.58,rely=0.04,height=117,width=140)
        self.btnReset.place(relx=0.703,rely=0.04,height=117,width=140)
        self.btnStart.place(relx=0.825,rely=0.04,height=117,width=140)
        self.btnRobotPosInit.place(relx=0.58,rely=0.32,height=45,width=147)
        self.btnEnvPosInit.place(relx=0.58,rely=0.24,height=45,width=147)
        self.canvasBoard.place(relx=0.01,rely=0.01,relheight=0.91,relwidth=0.52)
        self.canvasLegend.place(relx=0.75,rely=0.42,relheight=0.25,relwidth=0.2)
        self.spinRows.place(relx=0.85,rely=0.24,relheight=0.04,relwidth=0.07)
        self.spinCols.place(relx=0.85,rely=0.30,relheight=0.04,relwidth=0.07)
        self.lblArenaRows.place(relx=0.79,rely=0.24,height=25,width=56)
        self.lblArenaCols.place(relx=0.79,rely=0.305,height=25,width=46)
        self.spinNumRobots.place(relx=0.85,rely=0.36,relheight=0.04,relwidth=0.07)
        self.lblNumRobots.place(relx=0.79,rely=0.365,height=25,width=46)
        self.scrollbar.place(relx=0.95,rely=0.70,relheight=0.21,relwidth=0.015)
        self.txtOutput.place(relx=0.57,rely=0.70,relheight=0.21,relwidth=0.38)
        self.radioRobotMove.place(relx=0.54,rely=0.41,height=22,width=207)
        self.radioEnvMove.place(relx=0.535,rely=0.44,height=22,width=207)
        self.btnSaveAutomaton.place(relx=0.58,rely=0.60,height=57,width=150)
        self.radioEnvAutoPlay.place(relx=0.544,rely=0.48,height=22,width=207)
        self.radioEnvManualPlay.place(relx=0.55,rely=0.51,height=22,width=207)
        self.chkUsePolicy.place(relx=0.557,rely=0.55,height=22,width=150)

        return

if __name__ == '__main__':
    vp_start_gui()
    # cProfile.runctx( 'vp_start_gui()', globals(), locals(), filename="cpsMultiAgentAnalysis.profile" )


